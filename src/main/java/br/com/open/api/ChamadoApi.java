/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.15).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package br.com.open.api;

import javax.validation.Valid;
import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import br.com.open.model.Chamado;
import br.com.open.model.dto.ChamadoDTO;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-08-24T23:05:39.296Z")

@Api(value = "chamado", description = "the chamado API")
@RequestMapping(value = "/api")
public interface ChamadoApi {

    @ApiOperation(value = "Inserir trâmite ao chamado.", nickname = "inserirTramite", notes = "EndPoint responsável por inserir trâmite ao chamado.", tags={ "Chamado", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Operação realizada com sucesso."),
        @ApiResponse(code = 405, message = "Entrada inválida."),
        @ApiResponse(code = 500, message = "Erro Interno.") })
    @RequestMapping(value = "/chamado/inserirTramite/{tramite}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> inserirTramite(@DecimalMin("1") @DecimalMax("10") @ApiParam(value = "EndPoint para alterar senha do usuário.",required=true) @PathVariable("tramite") String tramite);


    @ApiOperation(value = "Alterar senha do usuário.", nickname = "listarTodosChamadosPorSetor", notes = "", tags={ "Chamado", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Operação realizada com sucesso."),
        @ApiResponse(code = 404, message = "Setor não encontrado"),
        @ApiResponse(code = 500, message = "Erro Interno") })
    @RequestMapping(value = "/chamado/listarTodosChamadosPorSetor/{setor}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Void> listarTodosChamadosPorSetor(@DecimalMin("1") @DecimalMax("10") @ApiParam(value = "EndPoint para alterar senha do usuário.",required=true) @PathVariable("setor") String setor);


    @ApiOperation(value = "Alterar senha do usuário.", nickname = "listarTodosChamadosPorUsuario", notes = "", tags={ "Chamado", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Operação realizada com sucesso."),
        @ApiResponse(code = 404, message = "Usuário não encontrado"),
        @ApiResponse(code = 500, message = "Erro Interno") })
    @RequestMapping(value = "/chamado/listarTodosChamadosPorUsuario/{usuario}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Void> listarTodosChamadosPorUsuario(@DecimalMin("1") @DecimalMax("10") @ApiParam(value = "EndPoint para alterar senha do usuário.",required=true) @PathVariable("usuario") String usuario);


    @ApiOperation(value = "Registrar novo chamado.", nickname = "registrarNovoChamado", notes = "EndPoint responsável por registrar novo chamado.", tags={ "Chamado", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Operação realizada com sucesso."),
        @ApiResponse(code = 405, message = "Entrada inválida."),
        @ApiResponse(code = 500, message = "Erro Interno.") })
    @RequestMapping(value = "/chamado/registrarChamado",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Chamado> registrarNovoChamado(@ApiParam(value = "EndPoint responsável por registrar novo chamado." ,required=true )  @Valid @RequestBody ChamadoDTO body);

}
